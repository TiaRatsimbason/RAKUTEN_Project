# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI - CD

on:
  push:
    branches: [ "master", "Dev" ]
  pull_request:
    branches: [ "master", "Dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3

      with:
        python-version: "3.10.14"

    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install dependencies
      run: |
        pip install --no-cache-dir poetry
        poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi
        python -m nltk.downloader punkt_tab

      # - name: Build Docker Images
      #  run: docker-compose -f docker/docker-compose.yaml build

      # - name: Run Docker Composes
      #  run: docker-compose -f docker/docker-compose.yaml --env-file .env.dev up

    - name: Test with pytest
      run: |
        pytest tests/unit
        pytest tests/integration
